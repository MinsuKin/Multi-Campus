<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lab.mybatis.user.UserMapper">


<!-- UserManage_로그인 ############################################################# -->

   <select id="login" resultType="lab.spring.sikgu.model.SikguVO"
      parameterType="hashmap"> <!-- 타입은 소문자로 쓸 것!! -->
      select * from sikgu where 
      sikgu_id = #{sikgu_id} and sikgu_pwd =#{sikgu_pwd}
   </select>

   <select id="loginCheckId" resultType="lab.spring.sikgu.model.SikguVO"
      parameterType="hashmap">
      select * from sikgu where 
      sikgu_id = #{sikgu_id}
   </select>


<!-- 아이디 비밀번호 찾기 ############################################################# -->

   <select id="searchId" resultType="string"
      parameterType="hashmap"> <!-- 타입은 소문자로 쓸 것!! -->
      select sikgu_id from sikgu where 
      sikgu_name = #{sikgu_name} and sikgu_phone = #{sikgu_phone}
   </select>

   <select id="searchPassword" resultType="string"
      parameterType="hashmap">
      select sikgu_pwd from sikgu where 
      sikgu_id = #{sikgu_id} and sikgu_email = #{sikgu_email}
   </select>


<!-- / UserManage_로그인 ########################################################### -->


<!-- UserManage_전체 조회 ########################################################### -->

   <!-- 회원 로그인 정보 전체 조회 -->
   <select id="getSikguList"
      resultType="lab.spring.sikgu.model.SikguVO">
      select * from sikgu
   </select>

   <!-- 상점 사용자 전체 조회 -->
   <select id="getStoreList"
      resultType="lab.spring.sikgu.model.StoreVO">
      select * from store
   </select>

<!-- / UserManage_전체 조회 ########################################################### -->

<!-- UserManage_회원 가입 ############################################################# -->
   
   <!-- 1. 로그인 정보 저장 (sikgu table)    : join.jsp          --> 
   <!-- 2-1. 개인 사용자 입력 페이지            : join_customer.jsp -->
   <!-- 2-2. 상점 사용자 입력 페이지          : join_store.jsp    -->
   
   <!-- 1 -->
   
   <!-- 아이디 중복 여부 확인 -->
   <select id="checkSikgu"
      resultType="lab.spring.sikgu.model.SikguVO" parameterType="string">
      select *
      from sikgu a
      where exists (select 'x' from sikgu where a.sikgu_id = #{sikgu_id})
   </select>

   <!-- 로그인 정보 저장 -->
   <insert id="insertSikgu"
      parameterType="lab.spring.sikgu.model.SikguVO">
      insert into sikgu
      (sikgu_id, sikgu_pwd,sikgu_biznumber,sikgu_name, sikgu_phone, sikgu_email)
      values (#{sikgu_id},#{sikgu_pwd},#{sikgu_biznumber},#{sikgu_name},#{sikgu_phone},#{sikgu_email})
   </insert>

  
   <!-- 2-2 -->
   <!-- 사업자 등록 번호 중복 여부 확인 -->
   <select id="checkStore"
      resultType="lab.spring.sikgu.model.StoreVO" parameterType="string">
      select *
      from store a
      where exists (select 'x' from store where a.store_biz_number = #{store_biz_number})
   </select>
   
   <!-- 상점 사용자 정보 저장 -->
      <insert id="insertStore"
      parameterType="lab.spring.sikgu.model.StoreVO">
      insert into store
      (sikgu_id,category_id,store_name,store_phone,store_address,store_x,store_y,store_profile,store_op_time,store_detailaddress,store_face_id,store_face_pwd,store_naver_id,store_naver_pwd)
      values
      (#{sikgu_id},#{category_id},#{store_name},#{store_phone},#{store_address},#{store_x},#{store_y},#{store_profile},#{store_op_time},#{store_detailaddress},#{store_face_id},#{store_face_pwd},#{store_naver_id},#{store_naver_pwd})
   </insert>
<!-- / UserManage_회원 가입 ############################################################# -->

<!-- UserManage_회원 정보 수정 ############################################################ -->

   <!-- 비밀번호 변경 -->
   <update id="updateSikgu"
      parameterType="lab.spring.sikgu.model.SikguVO">
      UPDATE sikgu SET sikgu_pwd =#{sikgu_pwd}, sikgu_name =#{sikgu_name},
      sikgu_phone =#{sikgu_phone},sikgu_email = #{sikgu_email},sikgu_biznumber =#{sikgu_biznumber} 
      where sikgu_id = #{sikgu_id}
   </update>
   
   <!-- 회원정보 수정 -->
   <update id="updateStore"
      parameterType="lab.spring.sikgu.model.StoreVO">
      update store set
      category_id=#{category_id},store_name=#{store_name},store_phone=#{store_phone},store_address=#{store_address},store_x=#{store_x},store_y=#{store_y},
      store_profile_url=#{store_profile_url},store_web_url=#{store_web_url},store_sns_url=#{store_sns_url},
      store_opendate=#{store_opendate},store_main_video=#{store_main_video},store_video_path=#{store_video_path}
      where sikgu_id=#{sikgu_id}
   </update>

<!-- / UserManage_회원 정보 수정 ########################################################### -->


<!-- MYLIST_회원 정보 조회 ################################################################# -->

   <!-- (sikgu_type == C) => mylist -->
   <select id="getCustomer"
      resultType="lab.spring.sikgu.model.CustomerVO" parameterType="string">
      select *
      from sikgu where sikgu_id=#{sikgu_id}
   </select>

   <!-- (sikgu_type == S) => storelist -->
   <select id="getStore"
      resultType="lab.spring.sikgu.model.StoreVO" parameterType="string">
      select *
      from store where sikgu_id=#{sikgu_id}
   </select>

<!-- / MYLIST_회원 정보 조회 ############################################################### -->

</mapper>